{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "interval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Admin__NoBrandAvailable",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Admin__UpkeepNotTrue",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "brandAdd",
          "type": "address"
        }
      ],
      "name": "BrandAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "BrandArrayModified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "brandAdd",
          "type": "address"
        }
      ],
      "name": "WarrantyExtended",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_brandID",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_brandAdd",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_brandName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_brandEmailAddress",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_warrantyIndex",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_smartContractAddress",
          "type": "address"
        }
      ],
      "name": "addBrand",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_brandAdd",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_warrantyIndex",
          "type": "uint256"
        }
      ],
      "name": "extendWarranty",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getBrandAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBrandArrays",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "brandID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "brandAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "brandName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "brandEmailAddress",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "warrantyPeriod",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "smartContractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct Admin.Brand[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getBrandData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "brandID",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "brandAddress",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "brandName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "brandEmailAddress",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "warrantyPeriod",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "smartContractAddress",
              "type": "address"
            }
          ],
          "internalType": "struct Admin.Brand",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getBrandEmailAddress",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "brandAdd",
          "type": "address"
        }
      ],
      "name": "getBrandID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "brandAdd",
          "type": "address"
        }
      ],
      "name": "getBrandIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getBrandIndexFromID",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getBrandName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getBrandSmartContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getBrandWarrantyLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "warrantyPackIndex",
          "type": "uint256"
        }
      ],
      "name": "getEntryFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfBrands",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "warrantyPackIndex",
          "type": "uint256"
        }
      ],
      "name": "getWarrantyPack",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd74ca41a99ba69ffd101f65499d4c50a33d8e9edd5f8e0270de2565a1cd9618f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2048910",
    "logsBloom": "0x
<<<<<<< HEAD
    "blockHash": "0x00fc31277f3577daaa9b7e2b12c222c56d57d3df259b52c0af0bf67a96eb8dfd",
    "transactionHash": "0x5b1211535d1bcd70906c57065206048468b48777b13e857acf889c4397bfc67e",
=======
    "blockHash": "0x9aef7c89d4b4fa37ed876d604ef7934c017ae327deba712bc29b88cb157aadce",
    "transactionHash": "0xd74ca41a99ba69ffd101f65499d4c50a33d8e9edd5f8e0270de2565a1cd9618f",
>>>>>>> 519f24269472377190e162bbd4192a3c8923a4ed
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2048910",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "86400"
  ],
  "numDeployments": 1,
  "solcInputHash": "40484232baa12421112a004937fdf370",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Admin__NoBrandAvailable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Admin__UpkeepNotTrue\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brandAdd\",\"type\":\"address\"}],\"name\":\"BrandAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"BrandArrayModified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"brandAdd\",\"type\":\"address\"}],\"name\":\"WarrantyExtended\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_brandID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_brandAdd\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_brandName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_brandEmailAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_warrantyIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_smartContractAddress\",\"type\":\"address\"}],\"name\":\"addBrand\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_brandAdd\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_warrantyIndex\",\"type\":\"uint256\"}],\"name\":\"extendWarranty\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBrandAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBrandArrays\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"brandID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"brandAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"brandName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"brandEmailAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"warrantyPeriod\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"smartContractAddress\",\"type\":\"address\"}],\"internalType\":\"struct Admin.Brand[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBrandData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"brandID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"brandAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"brandName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"brandEmailAddress\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"warrantyPeriod\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"smartContractAddress\",\"type\":\"address\"}],\"internalType\":\"struct Admin.Brand\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBrandEmailAddress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"brandAdd\",\"type\":\"address\"}],\"name\":\"getBrandID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"brandAdd\",\"type\":\"address\"}],\"name\":\"getBrandIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getBrandIndexFromID\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBrandName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBrandSmartContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getBrandWarrantyLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"warrantyPackIndex\",\"type\":\"uint256\"}],\"name\":\"getEntryFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfBrands\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"warrantyPackIndex\",\"type\":\"uint256\"}],\"name\":\"getWarrantyPack\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"It interracts with the Brand Smart Contract to add their details in brands array & check for their warranty period.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Admin Smart Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"checkUpkeep(bytes)\":{\"notice\":\"Overriden by the KeepersInterface, the returned value must be true to run performUpKeep.\"},\"performUpkeep(bytes)\":{\"notice\":\"After checkUpkeep returns true, it updates the warranty of all brands in the array.\"}},\"notice\":\"This contract is only accessable by someone in authority and can be used to check & maintain brands that provide nft warranties.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Admin.sol\":\"Admin\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/KeeperBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract KeeperBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5dc972fdf3a524312e68ef6d2e58bcdaf965d08d9415aefa289207350c2bc85a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./KeeperBase.sol\\\";\\nimport \\\"./interfaces/KeeperCompatibleInterface.sol\\\";\\n\\nabstract contract KeeperCompatible is KeeperBase, KeeperCompatibleInterface {}\\n\",\"keccak256\":\"0xfdb84fea1ee213662ae66b95d4f620be73b7af5ede58be3d330b222b9b566d95\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface KeeperCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0xb6577cda6b731b655aebcb6e3c24f8658d3f4c5eda07200622d07d4570af33ea\",\"license\":\"MIT\"},\"contracts/Admin.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.8;\\n\\n//Imports\\nimport \\\"@chainlink/contracts/src/v0.8/KeeperCompatible.sol\\\";\\n//Errors\\nerror Admin__Not_Admin();\\nerror Admin__WithdrawFailed();\\nerror Admin__UpkeepNotTrue();\\nerror Admin__NoBrandAvailable();\\n\\n//Interface\\n\\ncontract InterfaceAdmin {\\n    function addBrand(\\n        uint256 _brandID,\\n        address _brandAdd,\\n        string memory _brandName,\\n        string memory _brandEmailAddress,\\n        uint256 _warrantyIndex,\\n        address _smartContractAddress\\n    ) external {}\\n\\n    function extendWarranty(address _brandAdd, uint256 _warrantyIndex) external payable {}\\n\\n    function getEntryFee(uint256 _index) external view returns (uint256) {}\\n\\n    function getBrandID(address brandAdd) external view returns (uint256) {}\\n}\\n\\n//Contract\\n\\n/**@title Admin Smart Contract\\n *@notice This contract is only accessable by someone in authority and can be used to check & maintain brands that provide nft warranties.\\n *@dev It interracts with the Brand Smart Contract to add their details in brands array & check for their warranty period.\\n */\\ncontract Admin is KeeperCompatibleInterface {\\n    //Type Declaration\\n    struct Brand {\\n        uint256 brandID;\\n        address brandAddress;\\n        string brandName;\\n        string brandEmailAddress;\\n        uint256 warrantyPeriod;\\n        address smartContractAddress;\\n    }\\n\\n    //State Variables\\n    address payable private immutable i_owner;\\n    uint256 private immutable i_interval;\\n    Brand[] private s_brands;\\n    uint256 private s_currentTimeStamp;\\n    mapping(uint256 => uint256[]) private s_warrantyPack;\\n    mapping(address => uint256) private s_addressToBrandIndex;\\n    mapping(address => uint256) private s_addressToBrandId;\\n    mapping(uint256 => uint256) private s_idToIndex;\\n\\n    //Events\\n    event BrandAdded(address indexed brandAdd);\\n    event WarrantyExtended(address indexed brandAdd);\\n    event BrandArrayModified();\\n\\n    //Modifiers\\n    modifier onlyAdmin() {\\n        if (msg.sender != i_owner) revert Admin__Not_Admin();\\n        _;\\n    }\\n\\n    //Constructor\\n    constructor(uint256 interval) {\\n        i_owner = payable(msg.sender);\\n        i_interval = interval;\\n        s_currentTimeStamp = block.timestamp;\\n        s_warrantyPack[1] = [30, 1];\\n        s_warrantyPack[2] = [60, 2];\\n        s_warrantyPack[3] = [90, 3];\\n    }\\n\\n    //Recieve or Fallback\\n\\n    //Functions\\n\\n    ////External\\n\\n    function addBrand(\\n        uint256 _brandID,\\n        address _brandAdd,\\n        string memory _brandName,\\n        string memory _brandEmailAddress,\\n        uint256 _warrantyIndex,\\n        address _smartContractAddress\\n    ) external {\\n        s_addressToBrandIndex[_brandAdd] = s_brands.length;\\n        s_addressToBrandId[_brandAdd] = _brandID;\\n        s_idToIndex[_brandID] = s_addressToBrandIndex[_brandAdd];\\n        s_brands.push(\\n            Brand(\\n                _brandID,\\n                _brandAdd,\\n                _brandName,\\n                _brandEmailAddress,\\n                s_warrantyPack[_warrantyIndex][0],\\n                _smartContractAddress\\n            )\\n        );\\n        emit BrandAdded(_brandAdd);\\n    }\\n\\n    function extendWarranty(address _brandAdd, uint256 _warrantyIndex) external payable {\\n        uint256 index = s_addressToBrandIndex[_brandAdd];\\n        s_brands[index].warrantyPeriod += s_warrantyPack[_warrantyIndex][0];\\n        emit WarrantyExtended(_brandAdd);\\n    }\\n\\n    ////Public\\n\\n    // function withdraw() public onlyAdmin {\\n    //     (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n    //     if (!callSuccess) revert Admin__WithdrawFailed();\\n    // }\\n\\n    /**\\n     *@notice Overriden by the KeepersInterface, the returned value must be true to run performUpKeep.\\n     */\\n    function checkUpkeep(\\n        bytes memory /* checkData */\\n    )\\n        public\\n        view\\n        override\\n        returns (\\n            bool upkeepNeeded,\\n            bytes memory /* performData */\\n        )\\n    {\\n        upkeepNeeded = (block.timestamp - s_currentTimeStamp) > i_interval;\\n        return (upkeepNeeded, \\\"0x0\\\");\\n    }\\n\\n    /**\\n     *@notice After checkUpkeep returns true, it updates the warranty of all brands in the array.\\n     */\\n    function performUpkeep(\\n        bytes calldata /* performData */\\n    ) external override {\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\n\\n        if (!upkeepNeeded) revert Admin__UpkeepNotTrue();\\n        if (s_brands.length == 0) revert Admin__NoBrandAvailable();\\n\\n        for (uint256 i = 0; i < s_brands.length; i++) {\\n            s_brands[i].warrantyPeriod -= 1;\\n            if (s_brands[i].warrantyPeriod == 0) {\\n                s_addressToBrandIndex[s_brands[i].brandAddress] = 0;\\n                delete (s_brands[i]);\\n            }\\n        }\\n\\n        s_currentTimeStamp = block.timestamp;\\n        emit BrandArrayModified();\\n    }\\n\\n    //View or Pure Functions\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getInterval() public view returns (uint256) {\\n        return i_interval;\\n    }\\n\\n    function getNumberOfBrands() public view returns (uint256) {\\n        return s_brands.length;\\n    }\\n\\n    function getWarrantyPack(uint256 warrantyPackIndex) public view returns (uint256) {\\n        return s_warrantyPack[warrantyPackIndex][0];\\n    }\\n\\n    function getBrandAddress(uint256 index) public view returns (address) {\\n        return s_brands[index].brandAddress;\\n    }\\n\\n    function getBrandName(uint256 index) public view returns (string memory) {\\n        return s_brands[index].brandName;\\n    }\\n\\n    function getBrandEmailAddress(uint256 index) public view returns (string memory) {\\n        return s_brands[index].brandEmailAddress;\\n    }\\n\\n    function getBrandWarrantyLeft(uint256 index) public view returns (uint256) {\\n        return s_brands[index].warrantyPeriod;\\n    }\\n\\n    function getBrandSmartContractAddress(uint256 index) public view returns (address) {\\n        return s_brands[index].smartContractAddress;\\n    }\\n\\n    function getEntryFee(uint256 warrantyPackIndex) public view returns (uint256) {\\n        return uint256(s_warrantyPack[warrantyPackIndex][1]);\\n    }\\n\\n    function getBrandIndex(address brandAdd) public view returns (uint256) {\\n        return s_addressToBrandIndex[brandAdd];\\n    }\\n\\n    function getBrandID(address brandAdd) public view returns (uint256) {\\n        return s_addressToBrandId[brandAdd];\\n    }\\n\\n    function getBrandData(uint256 index) public view returns (Brand memory) {\\n        return s_brands[index];\\n    }\\n\\n    function getBrandArrays() public view returns (Brand[] memory) {\\n        return s_brands;\\n    }\\n\\n    function getBrandIndexFromID(uint256 id) public view returns (uint256) {\\n        return s_idToIndex[id];\\n    }\\n}\\n\",\"keccak256\":\"0xf9e8063c2d1e42559f02515fca6d77aef605723babcc01cc9c0dbd74aceb19d3\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b506040516200225e3803806200225e833981810160405281019062000037919062000200565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b815250508060a08181525050426001819055506040518060400160405280601e60ff168152602001600160ff168152506002600060018152602001908152602001600020906002620000be9291906200014a565b506040518060400160405280603c60ff168152602001600260ff168152506002600060028152602001908152602001600020906002620001009291906200014a565b506040518060400160405280605a60ff168152602001600360ff168152506002600060038152602001908152602001600020906002620001429291906200014a565b505062000232565b8280548282559060005260206000209081019282156200018e579160200282015b828111156200018d578251829060ff169055916020019190600101906200016b565b5b5090506200019d9190620001a1565b5090565b5b80821115620001bc576000816000905550600101620001a2565b5090565b600080fd5b6000819050919050565b620001da81620001c5565b8114620001e657600080fd5b50565b600081519050620001fa81620001cf565b92915050565b600060208284031215620002195762000218620001c0565b5b60006200022984828501620001e9565b91505092915050565b60805160601c60a051611ffc6200026260003960008181610ffc0152611190015260006111680152611ffc6000f3fe6080604052600436106101145760003560e01c80636e04ff0d116100a05780639ab5a65d116100645780639ab5a65d146103f1578063ab6818931461042e578063b0074bd614610459578063d5b2a79e14610496578063dbd8db6b146104d357610114565b80636e04ff0d14610304578063826debf114610342578063893d20e81461035e57806391ad27b414610389578063984d3c96146103b457610114565b80632940abf0116100e75780632940abf0146101f95780634585e33b146102245780634907c36a1461024d57806351ecf2291461028a5780636123504a146102c757610114565b806303cb964d146101195780630ed32c1e1461015657806310dc51681461019357806311b63a22146101bc575b600080fd5b34801561012557600080fd5b50610140600480360381019061013b919061156e565b610510565b60405161014d91906115dc565b60405180910390f35b34801561016257600080fd5b5061017d6004803603810190610178919061156e565b61055e565b60405161018a9190611606565b60405180910390f35b34801561019f57600080fd5b506101ba60048036038101906101b59190611793565b61057b565b005b3480156101c857600080fd5b506101e360048036038101906101de919061156e565b61083c565b6040516101f09190611606565b60405180910390f35b34801561020557600080fd5b5061020e610876565b60405161021b9190611a50565b60405180910390f35b34801561023057600080fd5b5061024b60048036038101906102469190611ad2565b610ab9565b005b34801561025957600080fd5b50610274600480360381019061026f919061156e565b610d3f565b60405161028191906115dc565b60405180910390f35b34801561029657600080fd5b506102b160048036038101906102ac919061156e565b610d8d565b6040516102be9190611baf565b60405180910390f35b3480156102d357600080fd5b506102ee60048036038101906102e99190611bd1565b610fad565b6040516102fb9190611606565b60405180910390f35b34801561031057600080fd5b5061032b60048036038101906103269190611c9f565b610ff6565b604051610339929190611d58565b60405180910390f35b61035c60048036038101906103579190611d88565b61106c565b005b34801561036a57600080fd5b50610373611164565b60405161038091906115dc565b60405180910390f35b34801561039557600080fd5b5061039e61118c565b6040516103ab9190611606565b60405180910390f35b3480156103c057600080fd5b506103db60048036038101906103d6919061156e565b6111b4565b6040516103e89190611606565b60405180910390f35b3480156103fd57600080fd5b506104186004803603810190610413919061156e565b6111ee565b6040516104259190611e12565b60405180910390f35b34801561043a57600080fd5b506104436112a5565b6040516104509190611606565b60405180910390f35b34801561046557600080fd5b50610480600480360381019061047b9190611bd1565b6112b1565b60405161048d9190611606565b60405180910390f35b3480156104a257600080fd5b506104bd60048036038101906104b8919061156e565b6112fa565b6040516104ca9190611606565b60405180910390f35b3480156104df57600080fd5b506104fa60048036038101906104f5919061156e565b611328565b6040516105079190611e12565b60405180910390f35b600080828154811061052557610524611e34565b5b906000526020600020906006020160050160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600060056000838152602001908152602001600020549050919050565b600080549050600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555085600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600560008881526020019081526020016000208190555060006040518060c001604052808881526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001600260008681526020019081526020016000206000815481106106c0576106bf611e34565b5b906000526020600020015481526020018373ffffffffffffffffffffffffffffffffffffffff1681525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020190805190602001906107809291906113df565b50606082015181600301908051906020019061079d9291906113df565b506080820151816004015560a08201518160050160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050508473ffffffffffffffffffffffffffffffffffffffff167ff294465ab6aaa3650993093431777d23cda2be98f0ce448bbd202694c8beafb960405160405180910390a2505050505050565b60006002600083815260200190815260200160002060008154811061086457610863611e34565b5b90600052602060002001549050919050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610ab057838290600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201805461092d90611e92565b80601f016020809104026020016040519081016040528092919081815260200182805461095990611e92565b80156109a65780601f1061097b576101008083540402835291602001916109a6565b820191906000526020600020905b81548152906001019060200180831161098957829003601f168201915b505050505081526020016003820180546109bf90611e92565b80601f01602080910402602001604051908101604052809291908181526020018280546109eb90611e92565b8015610a385780601f10610a0d57610100808354040283529160200191610a38565b820191906000526020600020905b815481529060010190602001808311610a1b57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250508152602001906001019061089a565b50505050905090565b6000610ad360405180602001604052806000815250610ff6565b50905080610b0d576040517f4869d11200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080805490501415610b4c576040517f048e7b7500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600080549050811015610d0657600160008281548110610b7257610b71611e34565b5b90600052602060002090600602016004016000828254610b929190611ef3565b925050819055506000808281548110610bae57610bad611e34565b5b9060005260206000209060060201600401541415610cf357600060036000808481548110610bdf57610bde611e34565b5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008181548110610c6357610c62611e34565b5b90600052602060002090600602016000808201600090556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055600282016000610cb19190611465565b600382016000610cc19190611465565b60048201600090556005820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550505b8080610cfe90611f27565b915050610b4f565b50426001819055507fc7bc4c3cc41a9fda3b1b0faad698e2a9e44f505eed1fb8d9c1e3df5bc7a641d660405160405180910390a1505050565b6000808281548110610d5457610d53611e34565b5b906000526020600020906006020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b610d956114a5565b60008281548110610da957610da8611e34565b5b90600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282018054610e3290611e92565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5e90611e92565b8015610eab5780601f10610e8057610100808354040283529160200191610eab565b820191906000526020600020905b815481529060010190602001808311610e8e57829003601f168201915b50505050508152602001600382018054610ec490611e92565b80601f0160208091040260200160405190810160405280929190818152602001828054610ef090611e92565b8015610f3d5780601f10610f1257610100808354040283529160200191610f3d565b820191906000526020600020905b815481529060010190602001808311610f2057829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050919050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060607f0000000000000000000000000000000000000000000000000000000000000000600154426110299190611ef3565b119150816040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525091509150915091565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050600260008381526020019081526020016000206000815481106110d6576110d5611e34565b5b9060005260206000200154600082815481106110f5576110f4611e34565b5b906000526020600020906006020160040160008282546111159190611f70565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f0ea7d2342843933fa1a5957a73c94e85bd2272ae8cbe39e30ac528fe08d4135e60405160405180910390a2505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260008381526020019081526020016000206001815481106111dc576111db611e34565b5b90600052602060002001549050919050565b60606000828154811061120457611203611e34565b5b9060005260206000209060060201600301805461122090611e92565b80601f016020809104026020016040519081016040528092919081815260200182805461124c90611e92565b80156112995780601f1061126e57610100808354040283529160200191611299565b820191906000526020600020905b81548152906001019060200180831161127c57829003601f168201915b50505050509050919050565b60008080549050905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080828154811061130f5761130e611e34565b5b9060005260206000209060060201600401549050919050565b60606000828154811061133e5761133d611e34565b5b9060005260206000209060060201600201805461135a90611e92565b80601f016020809104026020016040519081016040528092919081815260200182805461138690611e92565b80156113d35780601f106113a8576101008083540402835291602001916113d3565b820191906000526020600020905b8154815290600101906020018083116113b657829003601f168201915b50505050509050919050565b8280546113eb90611e92565b90600052602060002090601f01602090048101928261140d5760008555611454565b82601f1061142657805160ff1916838001178555611454565b82800160010185558215611454579182015b82811115611453578251825591602001919060010190611438565b5b5090506114619190611507565b5090565b50805461147190611e92565b6000825580601f1061148357506114a2565b601f0160209004906000526020600020908101906114a19190611507565b5b50565b6040518060c0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b5b80821115611520576000816000905550600101611508565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61154b81611538565b811461155657600080fd5b50565b60008135905061156881611542565b92915050565b6000602082840312156115845761158361152e565b5b600061159284828501611559565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115c68261159b565b9050919050565b6115d6816115bb565b82525050565b60006020820190506115f160008301846115cd565b92915050565b61160081611538565b82525050565b600060208201905061161b60008301846115f7565b92915050565b61162a816115bb565b811461163557600080fd5b50565b60008135905061164781611621565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6116a082611657565b810181811067ffffffffffffffff821117156116bf576116be611668565b5b80604052505050565b60006116d2611524565b90506116de8282611697565b919050565b600067ffffffffffffffff8211156116fe576116fd611668565b5b61170782611657565b9050602081019050919050565b82818337600083830152505050565b6000611736611731846116e3565b6116c8565b90508281526020810184848401111561175257611751611652565b5b61175d848285611714565b509392505050565b600082601f83011261177a5761177961164d565b5b813561178a848260208601611723565b91505092915050565b60008060008060008060c087890312156117b0576117af61152e565b5b60006117be89828a01611559565b96505060206117cf89828a01611638565b955050604087013567ffffffffffffffff8111156117f0576117ef611533565b5b6117fc89828a01611765565b945050606087013567ffffffffffffffff81111561181d5761181c611533565b5b61182989828a01611765565b935050608061183a89828a01611559565b92505060a061184b89828a01611638565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61188d81611538565b82525050565b61189c816115bb565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156118dc5780820151818401526020810190506118c1565b838111156118eb576000848401525b50505050565b60006118fc826118a2565b61190681856118ad565b93506119168185602086016118be565b61191f81611657565b840191505092915050565b600060c0830160008301516119426000860182611884565b5060208301516119556020860182611893565b506040830151848203604086015261196d82826118f1565b9150506060830151848203606086015261198782826118f1565b915050608083015161199c6080860182611884565b5060a08301516119af60a0860182611893565b508091505092915050565b60006119c6838361192a565b905092915050565b6000602082019050919050565b60006119e682611858565b6119f08185611863565b935083602082028501611a0285611874565b8060005b85811015611a3e5784840389528151611a1f85826119ba565b9450611a2a836119ce565b925060208a01995050600181019050611a06565b50829750879550505050505092915050565b60006020820190508181036000830152611a6a81846119db565b905092915050565b600080fd5b600080fd5b60008083601f840112611a9257611a9161164d565b5b8235905067ffffffffffffffff811115611aaf57611aae611a72565b5b602083019150836001820283011115611acb57611aca611a77565b5b9250929050565b60008060208385031215611ae957611ae861152e565b5b600083013567ffffffffffffffff811115611b0757611b06611533565b5b611b1385828601611a7c565b92509250509250929050565b600060c083016000830151611b376000860182611884565b506020830151611b4a6020860182611893565b5060408301518482036040860152611b6282826118f1565b91505060608301518482036060860152611b7c82826118f1565b9150506080830151611b916080860182611884565b5060a0830151611ba460a0860182611893565b508091505092915050565b60006020820190508181036000830152611bc98184611b1f565b905092915050565b600060208284031215611be757611be661152e565b5b6000611bf584828501611638565b91505092915050565b600067ffffffffffffffff821115611c1957611c18611668565b5b611c2282611657565b9050602081019050919050565b6000611c42611c3d84611bfe565b6116c8565b905082815260208101848484011115611c5e57611c5d611652565b5b611c69848285611714565b509392505050565b600082601f830112611c8657611c8561164d565b5b8135611c96848260208601611c2f565b91505092915050565b600060208284031215611cb557611cb461152e565b5b600082013567ffffffffffffffff811115611cd357611cd2611533565b5b611cdf84828501611c71565b91505092915050565b60008115159050919050565b611cfd81611ce8565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611d2a82611d03565b611d348185611d0e565b9350611d448185602086016118be565b611d4d81611657565b840191505092915050565b6000604082019050611d6d6000830185611cf4565b8181036020830152611d7f8184611d1f565b90509392505050565b60008060408385031215611d9f57611d9e61152e565b5b6000611dad85828601611638565b9250506020611dbe85828601611559565b9150509250929050565b600082825260208201905092915050565b6000611de4826118a2565b611dee8185611dc8565b9350611dfe8185602086016118be565b611e0781611657565b840191505092915050565b60006020820190508181036000830152611e2c8184611dd9565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611eaa57607f821691505b60208210811415611ebe57611ebd611e63565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611efe82611538565b9150611f0983611538565b925082821015611f1c57611f1b611ec4565b5b828203905092915050565b6000611f3282611538565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611f6557611f64611ec4565b5b600182019050919050565b6000611f7b82611538565b9150611f8683611538565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611fbb57611fba611ec4565b5b82820190509291505056fea2646970667358221220be69849c7ed4050b9312d1e39da9bd992524a60ac5cc80e0e15f4095d3eddc2a64736f6c63430008080033",
  "deployedBytecode": "",
  "devdoc": {
    "details": "It interracts with the Brand Smart Contract to add their details in brands array & check for their warranty period.",
    "kind": "dev",
    "methods": {},
    "title": "Admin Smart Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "checkUpkeep(bytes)": {
        "notice": "Overriden by the KeepersInterface, the returned value must be true to run performUpKeep."
      },
      "performUpkeep(bytes)": {
        "notice": "After checkUpkeep returns true, it updates the warranty of all brands in the array."
      }
    },
    "notice": "This contract is only accessable by someone in authority and can be used to check & maintain brands that provide nft warranties.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1978,
        "contract": "contracts/Admin.sol:Admin",
        "label": "s_brands",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_struct(Brand)1970_storage)dyn_storage"
      },
      {
        "astId": 1980,
        "contract": "contracts/Admin.sol:Admin",
        "label": "s_currentTimeStamp",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 1985,
        "contract": "contracts/Admin.sol:Admin",
        "label": "s_warrantyPack",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 1989,
        "contract": "contracts/Admin.sol:Admin",
        "label": "s_addressToBrandIndex",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1993,
        "contract": "contracts/Admin.sol:Admin",
        "label": "s_addressToBrandId",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1997,
        "contract": "contracts/Admin.sol:Admin",
        "label": "s_idToIndex",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Brand)1970_storage)dyn_storage": {
        "base": "t_struct(Brand)1970_storage",
        "encoding": "dynamic_array",
        "label": "struct Admin.Brand[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_uint256,t_uint256)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Brand)1970_storage": {
        "encoding": "inplace",
        "label": "struct Admin.Brand",
        "members": [
          {
            "astId": 1959,
            "contract": "contracts/Admin.sol:Admin",
            "label": "brandID",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 1961,
            "contract": "contracts/Admin.sol:Admin",
            "label": "brandAddress",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1963,
            "contract": "contracts/Admin.sol:Admin",
            "label": "brandName",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 1965,
            "contract": "contracts/Admin.sol:Admin",
            "label": "brandEmailAddress",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 1967,
            "contract": "contracts/Admin.sol:Admin",
            "label": "warrantyPeriod",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1969,
            "contract": "contracts/Admin.sol:Admin",
            "label": "smartContractAddress",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}